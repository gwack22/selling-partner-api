<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: Crescat\SaloonSdkGenerator\Generators\DtoGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace SellingPartnerApi\Seller\SellerWalletV20240301\Dto;

use SellingPartnerApi\Dto;
use SellingPartnerApi\Seller\SellerWalletV20240301\Responses\TransferRatePreview;

final class TransactionInitiationRequest extends Dto
{
    /**
     * @param  string  $sourceAccountId  The unique identifier of the source Amazon Seller Wallet bank account from which the money is debited.
     * @param  string  $description  A description of the transaction.
     * @param  TransactionInstrumentDetails  $destinationTransactionInstrument  Details of the destination bank account in the transaction request.
     * @param  Currency  $sourceAmount  A currency type and amount.
     * @param  \DateTimeInterface  $requestTime  The time at which the transaction was initiated in [ISO 8601 date time format](https://developer-docs.amazon.com/sp-api/docs/iso-8601).
     * @param  ?string  $destinationAccountId  The unique identifier of the destination bank account where the money is deposited.
     * @param  ?AccountHolderAddress  $destinationAccountHolderAddress  The Address used to verify the bank account of the payee. This can be a person or business mailing address.
     * @param  ?TransferRatePreview  $transferRateDetails  The fees and foreign exchange rates applied to the transaction.
     *
     * If the fees are in terms of the `baseAmount` (source account) currency, then the effective rate is equal to **1 - (fees * `baseRate` / `baseAmount`)**.
     *
     * If the fees are in terms of the `transferAmount` (destination account) currency, then the effective rate is equal to **`baseRate` - (fees / `baseAmount`)**.
     *
     * In the preceding expressions, **fees** is equal to the sum of all `feeAmount.currencyAmount` values in the `fees` array.
     */
    public function __construct(
        public string $sourceAccountId,
        public string $description,
        public TransactionInstrumentDetails $destinationTransactionInstrument,
        public Currency $sourceAmount,
        public \DateTimeInterface $requestTime,
        public ?string $destinationAccountId = null,
        public ?AccountHolderAddress $destinationAccountHolderAddress = null,
        public ?TransferRatePreview $transferRateDetails = null,
    ) {}
}
