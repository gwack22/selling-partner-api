{
    "openapi": "3.0.1",
    "info": {
        "title": "The Selling Partner API for Amazon Seller Wallet Open Banking API",
        "description": "The Selling Partner API for Seller Wallet (Seller Wallet API) provides financial information that is relevant to a seller's Seller Wallet account. You can obtain financial events, balances, and transfer schedules for Seller Wallet accounts. You can also schedule and initiate transactions.",
        "termsOfService": "http://spectrum.Amazon.com/terms/",
        "contact": {
            "name": "Selling Partner API Developer Support",
            "url": "https://sellercentral.amazon.com/gp/mws/contactus.html"
        },
        "license": {
            "name": "Apache License 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        },
        "version": "2024-03-01"
    },
    "externalDocs": {
        "description": "Find out more about PSD",
        "url": "https://en.wikipedia.org/wiki/Payment_Services_Directive"
    },
    "servers": [
        {
            "url": "https://sellingpartnerapi-na.amazon.com/"
        }
    ],
    "tags": [
        {
            "name": "Accounts",
            "description": "Everything about Amazon Seller Wallet customer accounts"
        },
        {
            "name": "Transfer Preview",
            "description": "Access to all transfers with fees and the final amount with FX details in Amazon Seller Wallet"
        },
        {
            "name": "Transactions",
            "description": "Access to all transactions in Amazon Seller Wallet account"
        },
        {
            "name": "Transfer Schedule",
            "description": "Access to all transfer schedules in Amazon Seller Wallet account"
        }
    ],
    "paths": {
        "/finances/transfers/wallet/2024-03-01/accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Get all Amazon Seller Wallet accounts for the seller",
                "description": "Get all Seller Wallet accounts for a given seller.",
                "operationId": "listAccounts",
                "parameters": [
                    {
                        "name": "marketplaceId",
                        "in": "query",
                        "description": "The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "EU"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccountListing"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "marketplaceId": {
                                                "value": "marketplaceIdCase200"
                                            }
                                        }
                                    },
                                    "response": {
                                        "accounts": [
                                            {
                                                "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                                                "accountHolderName": "John Doe",
                                                "bankAccountNumberFormat": "BBAN",
                                                "bankName": "Amazon Seller Wallet",
                                                "bankAccountOwnershipType": "SELF",
                                                "routingNumber": "000000000",
                                                "bankNumberFormat": "BASIC",
                                                "accountCountryCode": "US",
                                                "accountCurrency": "USD",
                                                "bankAccountNumberTail": "000",
                                                "bankAccountHolderStatus": "ACTIVE"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "marketplaceId": {
                                                "value": "marketplaceIdCase400"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing digitalSignature.",
                                                "details": "Digital Signature is missing for the request"
                                            },
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing wacCertificate.",
                                                "details": "WAC Certificate is missing for the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "marketplaceId": {
                                                "value": "marketplaceIdCase403"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "marketplaceId": {
                                                "value": "marketplaceIdCase404"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "BankAccount not found.",
                                                "details": "BankAccount doesn't exists for USMarketplace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "marketplaceId": {
                                                "value": "marketplaceIdCase408"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond within given SLA"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "marketplaceId": {
                                                "value": "marketplaceIdCase429"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server Throttled Request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "marketplaceId": {
                                                "value": "marketplaceIdCase500"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "marketplaceId": {
                                                "value": "marketplaceIdCase503"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/finances/transfers/wallet/2024-03-01/accounts/{accountId}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Find particular Amazon Seller Wallet account by Amazon account identifier",
                "description": "Retrieve an Amazon Seller Wallet bank account by Amazon account identifier.",
                "operationId": "getAccount",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The ID of the Amazon Seller Wallet account.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase200"
                                            }
                                        }
                                    },
                                    "response": {
                                        "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                                        "accountHolderName": "Jane Doe",
                                        "bankAccountNumberFormat": "BBAN",
                                        "bankName": "Amazon Seller Wallet",
                                        "bankAccountOwnershipType": "SELF",
                                        "routingNumber": "000000000",
                                        "bankNumberFormat": "BASIC",
                                        "accountCountryCode": "US",
                                        "accountCurrency": "USD",
                                        "bankAccountNumberTail": "000",
                                        "bankAccountHolderStatus": "ACTIVE"
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase400"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing digitalSignature.",
                                                "details": "Digital Signature is missing for the request"
                                            },
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing wacCertificate.",
                                                "details": "WAC certificate is missing for the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase403"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase404"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "BankAccount not found.",
                                                "details": "BankAccount doesn't exists for InvalidAccountId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase408"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond within given SLA"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase429"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server Throttled Request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase500"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase503"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/finances/transfers/wallet/2024-03-01/accounts/{accountId}/balance": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Find balance in particular Amazon Seller Wallet account by Amazon account identifier",
                "description": "Retrieve the balance in a given Amazon Seller Wallet bank account.",
                "operationId": "listAccountBalances",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The ID of the Amazon Seller Wallet account.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BalanceListing"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase200"
                                            }
                                        }
                                    },
                                    "response": {
                                        "balances": [
                                            {
                                                "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                                                "balanceType": "AVAILABLE",
                                                "balanceAmount": 123.45,
                                                "balanceCurrency": "USD",
                                                "lastUpdateDate": "2024-03-01T10:30:00Z"
                                            },
                                            {
                                                "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                                                "balanceType": "LOCKED_IN",
                                                "balanceAmount": 500,
                                                "balanceCurrency": "USD",
                                                "lastUpdateDate": "2024-03-01T10:30:00Z"
                                            },
                                            {
                                                "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                                                "balanceType": "TOTAL",
                                                "balanceAmount": 623.45,
                                                "balanceCurrency": "USD",
                                                "lastUpdateDate": "2024-03-01T10:30:00Z"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase400"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing wacCertificate.",
                                                "details": "WAC certificate is missing for the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase403"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase404"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "BankAccount not found.",
                                                "details": "BankAccount doesn't exists for InvalidAccountId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase408"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond within given SLA"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase429"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server Throttled Request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase500"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "accountIdCase503"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/finances/transfers/wallet/2024-03-01/transferPreview": {
            "get": {
                "tags": [
                    "Transfer Preview"
                ],
                "summary": "Fetch potential fees that could be applied on a transaction on the basis of the source and destination country currency code",
                "description": "Retrieve a list of potential fees on a transaction.",
                "operationId": "getTransferPreview",
                "parameters": [
                    {
                        "name": "sourceCountryCode",
                        "in": "query",
                        "description": "Country code of the source transaction account in ISO 3166 format.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "US"
                    },
                    {
                        "name": "sourceCurrencyCode",
                        "in": "query",
                        "description": "Currency code of the source transaction country in ISO 4217 format.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "USD"
                    },
                    {
                        "name": "destinationCountryCode",
                        "in": "query",
                        "description": "Country code of the destination transaction account in ISO 3166 format.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "FR"
                    },
                    {
                        "name": "destinationCurrencyCode",
                        "in": "query",
                        "description": "Currency code of the destination transaction country in ISO 4217 format.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "EUR"
                    },
                    {
                        "name": "baseAmount",
                        "in": "query",
                        "description": "The base transaction amount without any markup fees.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": 1000
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferRatePreview"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "sourceCountryCode": {
                                                "value": "EU"
                                            },
                                            "sourceCurrencyCode": {
                                                "value": "EUR"
                                            },
                                            "destinationCountryCode": {
                                                "value": "CN"
                                            },
                                            "destinationCurrencyCode": {
                                                "value": "CNY"
                                            },
                                            "baseAmount": {
                                                "value": 500
                                            }
                                        }
                                    },
                                    "response": {
                                        "baseAmount": {
                                            "currencyCode": "EUR",
                                            "currencyAmount": 500
                                        },
                                        "fxRateDetails": {
                                            "fxRateId": "UNIQUE_FX_RATE_ID_1",
                                            "baseRate": 7.6915,
                                            "effectiveFxRate": 7.6084,
                                            "rateDirection": "BUY"
                                        },
                                        "transferAmount": {
                                            "currencyCode": "CNY",
                                            "currencyAmount": 3804.2
                                        },
                                        "fees": [
                                            {
                                                "feeId": "Unique_FeeId_001",
                                                "feeType": "TRANSACTION_FEE",
                                                "feeRateValue": 0.9,
                                                "feeAmount": {
                                                    "currencyCode": "EUR",
                                                    "currencyAmount": 4.5
                                                }
                                            },
                                            {
                                                "feeId": "Unique_FeeId_002",
                                                "feeType": "TAX",
                                                "feeRateValue": 20,
                                                "feeAmount": {
                                                    "currencyCode": "EUR",
                                                    "currencyAmount": 0.9
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "sourceCountryCode": {
                                                "value": "AP"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing Input Parameter.",
                                                "details": "Invalid sourceCountryCode"
                                            },
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing Input Parameter.",
                                                "details": "Missing destinationCurrencyCode"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "sourceCountryCode": {
                                                "value": "US"
                                            },
                                            "destinationCountryCode": {
                                                "value": "US"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "sourceCountryCode": {
                                                "value": "US"
                                            },
                                            "sourceCurrencyCode": {
                                                "value": "USD"
                                            },
                                            "destinationCountryCode": {
                                                "value": "US"
                                            },
                                            "destinationCurrencyCode": {
                                                "value": "USD"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "BankAccount not found.",
                                                "details": "BankAccount doesn't exists for InvalidAccountId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "sourceCountryCode": {
                                                "value": "US"
                                            },
                                            "destinationCountryCode": {
                                                "value": "HK"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond in time"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "sourceCountryCode": {
                                                "value": "HK"
                                            },
                                            "destinationCountryCode": {
                                                "value": "HK"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server throttled the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "sourceCountryCode": {
                                                "value": "EU"
                                            },
                                            "destinationCountryCode": {
                                                "value": "EU"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "sourceCountryCode": {
                                                "value": "CN"
                                            },
                                            "destinationCountryCode": {
                                                "value": "CN"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/finances/transfers/wallet/2024-03-01/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "The API will return all the transactions for a given Amazon Seller Wallet account sorted by the transaction request date",
                "description": "Retrieve a list of transactions for a given Amazon Seller Wallet bank account.",
                "operationId": "listAccountTransactions",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "The ID of the Amazon Seller Wallet account.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token that you use to retrieve the next page of results. The response includes `nextPageToken` when the number of results exceeds 100. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextPageToken` is null. Note that this operation can return empty pages.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Next Page Token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionListing"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase200"
                                            }
                                        }
                                    },
                                    "response": {
                                        "nextPageToken": "3493805734095308457308475",
                                        "transactions": [
                                            {
                                                "transactionId": "amzn.transaction.AKJBNEFNL23R84V",
                                                "transactionType": "DEBIT",
                                                "transactionStatus": "PAYEE_UNDER_REVIEW",
                                                "transactionRequestDate": "2023-09-26T02:32:59.787Z",
                                                "expectedCompletionDate": "2023-09-26T02:32:59.787Z",
                                                "transactionActualCompletionDate": "2023-09-26T02:32:59.787Z",
                                                "lastUpdateDate": "2023-09-26T02:32:59.787Z",
                                                "requesterName": "TppOrgId",
                                                "transactionRequesterSource": "TPP",
                                                "transactionDescription": "Test transaction request",
                                                "transactionSourceAccount": {
                                                    "accountId": "sourceAccountIdCase200",
                                                    "bankAccountHolderName": "John Doe",
                                                    "bankName": "Amazon Seller Wallet",
                                                    "bankAccountNumberFormat": "IBAN",
                                                    "bankAccountNumberTail": "123",
                                                    "bankAccountCurrency": "GBP"
                                                },
                                                "transactionDestinationAccount": {
                                                    "bankAccountHolderName": "Dane Shipping",
                                                    "bankName": "Royal Bank of Scotland",
                                                    "bankAccountNumberFormat": "IBAN",
                                                    "bankAccountNumberTail": "819",
                                                    "bankAccountCurrency": "GBP",
                                                    "bankAccountCountryCode": "UK"
                                                },
                                                "transactionRequestAmount": {
                                                    "currencyCode": "EUR",
                                                    "currencyAmount": 500
                                                },
                                                "transferRateDetails": {
                                                    "baseAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 500
                                                    },
                                                    "fxRateDetails": {
                                                        "fxRateId": "UNIQUE_FX_RATE_ID_1",
                                                        "baseRate": 7.6915,
                                                        "effectiveFxRate": 7.6084,
                                                        "rateDirection": "BUY"
                                                    },
                                                    "transferAmount": {
                                                        "currencyCode": "CNY",
                                                        "currencyAmount": 3804.2
                                                    },
                                                    "fees": [
                                                        {
                                                            "feeId": "Unique_FeeId_001",
                                                            "feeType": "TRANSACTION_FEE",
                                                            "feeRateValue": 0.9,
                                                            "feeAmount": {
                                                                "currencyCode": "EUR",
                                                                "currencyAmount": 4.5
                                                            }
                                                        },
                                                        {
                                                            "feeId": "Unique_FeeId_002",
                                                            "feeType": "TAX",
                                                            "feeRateValue": 20,
                                                            "feeAmount": {
                                                                "currencyCode": "EUR",
                                                                "currencyAmount": 0.9
                                                            }
                                                        }
                                                    ]
                                                },
                                                "transactionFinalAmount": {
                                                    "currencyCode": "CNY",
                                                    "currencyAmount": 3804.2
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase400"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing wacCertificate.",
                                                "details": "WAC certificate is missing for the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase403"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase404"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "BankAccount not found.",
                                                "details": "BankAccount doesn't exists for InvalidAccountId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase408"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond in time"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase429"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server throttled the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase500"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase503"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a transaction request from Amazon Seller Wallet account to another customer-provided account",
                "description": "Create a transaction request from an Amazon Seller Wallet account to another customer-provided account.",
                "operationId": "createTransaction",
                "parameters": [
                    {
                        "name": "destAccountDigitalSignature",
                        "in": "header",
                        "description": "Digital signature for the destination bank account details.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw"
                    },
                    {
                        "name": "amountDigitalSignature",
                        "in": "header",
                        "description": "Digital signature for the source currency transaction amount.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7"
                    }
                ],
                "requestBody": {
                    "description": "The payload of the request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionInitiationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase200",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "Joane Packaging Ltd",
                                                            "bankAccountNumberFormat": "IBAN",
                                                            "bankName": "Royal Bank of Scotland",
                                                            "bankAccountOwnershipType": "THIRD_PARTY",
                                                            "routingNumber": "RBOSGB2L",
                                                            "bankNumberFormat": "BASIC",
                                                            "accountCountryCode": "GB",
                                                            "accountCurrency": "GBP",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "destinationAccountHolderAddress": {
                                                        "addressLine1": "4 East Market Street",
                                                        "addressLine2": "Unit 101",
                                                        "city": "Edinburgh",
                                                        "state": "Alba",
                                                        "postalCode": "EH88BG",
                                                        "country": "United Kingdom",
                                                        "countryCode": "UK"
                                                    },
                                                    "sourceAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 1000
                                                    },
                                                    "requestTime": "2023-09-26T01:21:53.002Z"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "transactionId": "amzn.transaction.ALNR19JCVWLN3E",
                                        "transactionType": "DEBIT",
                                        "transactionStatus": "PAYEE_UNDER_REVIEW",
                                        "transactionRequestDate": "2023-09-26T02:32:59.787Z",
                                        "expectedCompletionDate": "2023-09-26T02:32:59.787Z",
                                        "transactionActualCompletionDate": "2023-09-30T02:32:59.787Z",
                                        "lastUpdateDate": "2023-09-26T02:32:59.787Z",
                                        "requesterName": "TppOrgId",
                                        "transactionRequesterSource": "TPP",
                                        "transactionDescription": "Test transaction request",
                                        "transactionSourceAccount": {
                                            "accountId": "sourceAccountIdCase200",
                                            "bankAccountHolderName": "John Doe",
                                            "bankName": "Amazon Seller Wallet",
                                            "bankAccountNumberFormat": "IBAN",
                                            "bankAccountCurrency": "GBP"
                                        },
                                        "transactionDestinationAccount": {
                                            "bankAccountHolderName": "Johnny Packaging",
                                            "bankName": "Royal Bank of Scotland",
                                            "bankAccountNumberFormat": "IBAN",
                                            "bankAccountNumberTail": "819",
                                            "bankAccountCurrency": "GBP",
                                            "bankAccountCountryCode": "EU"
                                        },
                                        "transactionRequestAmount": {
                                            "currencyCode": "EUR",
                                            "currencyAmount": 500
                                        },
                                        "transferRateDetails": {
                                            "baseAmount": {
                                                "currencyCode": "EUR",
                                                "currencyAmount": 500
                                            },
                                            "fxRateDetails": {
                                                "fxRateId": "UNIQUE_FX_RATE_ID_1",
                                                "baseRate": 7.6915,
                                                "effectiveFxRate": 7.6084,
                                                "rateDirection": "BUY"
                                            },
                                            "transferAmount": {
                                                "currencyCode": "CNY",
                                                "currencyAmount": 3804.2
                                            },
                                            "fees": [
                                                {
                                                    "feeId": "Unique_FeeId_001",
                                                    "feeType": "TRANSACTION_FEE",
                                                    "feeRateValue": 0.9,
                                                    "feeAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 4.5
                                                    }
                                                },
                                                {
                                                    "feeId": "Unique_FeeId_002",
                                                    "feeType": "TAX",
                                                    "feeRateValue": 20,
                                                    "feeAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 0.9
                                                    }
                                                }
                                            ]
                                        },
                                        "transactionFinalAmount": {
                                            "currencyCode": "CNY",
                                            "currencyAmount": 3804.2
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase400",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "Johnny Doe",
                                                            "bankAccountNumberFormat": "IBAN",
                                                            "bankName": "Royal Bank of Scotland",
                                                            "bankAccountOwnershipType": "THIRD_PARTY",
                                                            "routingNumber": "RBOSGB2L",
                                                            "bankNumberFormat": "BASIC",
                                                            "accountCountryCode": "GB",
                                                            "accountCurrency": "GBP",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "destinationAccountHolderAddress": {
                                                        "addressLine1": "4 East Market Street",
                                                        "addressLine2": "Unit 101",
                                                        "city": "Edinburgh",
                                                        "state": "Alba",
                                                        "postalCode": "EH88BG",
                                                        "country": "United Kingdom",
                                                        "countryCode": "UK"
                                                    },
                                                    "sourceAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 1000
                                                    },
                                                    "requestTime": "2023-09-26T01:21:53.002Z"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing signature.",
                                                "details": "Missing addressDigitalSignature"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase403",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "Johnny Doe",
                                                            "bankAccountNumberFormat": "IBAN",
                                                            "bankName": "Royal Bank of Scotland",
                                                            "bankAccountOwnershipType": "THIRD_PARTY",
                                                            "routingNumber": "RBOSGB2L",
                                                            "bankNumberFormat": "BASIC",
                                                            "accountCountryCode": "GB",
                                                            "accountCurrency": "GBP",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "destinationAccountHolderAddress": {
                                                        "addressLine1": "4 East Market Street",
                                                        "addressLine2": "Unit 101",
                                                        "city": "Edinburgh",
                                                        "state": "Alba",
                                                        "postalCode": "EH88BG",
                                                        "country": "United Kingdom",
                                                        "countryCode": "UK"
                                                    },
                                                    "sourceAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 1000
                                                    },
                                                    "requestTime": "2023-09-26T01:21:53.002Z"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase404",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankAccountNumberFormat": "IBAN",
                                                            "bankName": "Royal Bank of Scotland",
                                                            "bankAccountOwnershipType": "THIRD_PARTY",
                                                            "routingNumber": "RBOSGB2L",
                                                            "bankNumberFormat": "BASIC",
                                                            "accountCountryCode": "GB",
                                                            "accountCurrency": "GBP",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "destinationAccountHolderAddress": {
                                                        "addressLine1": "4 East Market Street",
                                                        "addressLine2": "Unit 101",
                                                        "city": "Edinburgh",
                                                        "state": "Alba",
                                                        "postalCode": "EH88BG",
                                                        "country": "United Kingdom",
                                                        "countryCode": "UK"
                                                    },
                                                    "sourceAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 1000
                                                    },
                                                    "requestTime": "2023-09-26T01:21:53.002Z"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "BankAccount not found.",
                                                "details": "BankAccount doesn't exists for invalid SourceAccountId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase408",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankAccountNumberFormat": "IBAN",
                                                            "bankName": "Royal Bank of Scotland",
                                                            "bankAccountOwnershipType": "THIRD_PARTY",
                                                            "routingNumber": "RBOSGB2L",
                                                            "bankNumberFormat": "BASIC",
                                                            "accountCountryCode": "GB",
                                                            "accountCurrency": "GBP",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "destinationAccountHolderAddress": {
                                                        "addressLine1": "4 East Market St",
                                                        "addressLine2": "Unit 101",
                                                        "city": "City of Edinburgh",
                                                        "state": "Alba",
                                                        "postalCode": "EH88BG",
                                                        "country": "United Kingdom",
                                                        "countryCode": "UK"
                                                    },
                                                    "sourceAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 1000
                                                    },
                                                    "requestTime": "2023-09-26T01:21:53.002Z"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond in time"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The request was well-formed (i.e., syntactically correct) but could not be processed because of some restrictions like insufficient funds, transaction limit breach, etc.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase422",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankAccountNumberFormat": "IBAN",
                                                            "bankName": "Royal Bank of Scotland",
                                                            "bankAccountOwnershipType": "THIRD_PARTY",
                                                            "routingNumber": "RBOSGB2L",
                                                            "bankNumberFormat": "BASIC",
                                                            "accountCountryCode": "GB",
                                                            "accountCurrency": "GBP",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "destinationAccountHolderAddress": {
                                                        "addressLine1": "4 East Market St",
                                                        "addressLine2": "Unit 101",
                                                        "city": "Edinburgh",
                                                        "state": "Alba",
                                                        "postalCode": "EH88BG",
                                                        "country": "United Kingdom",
                                                        "countryCode": "UK"
                                                    },
                                                    "sourceAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 1000
                                                    },
                                                    "requestTime": "2023-09-26T01:21:53.002Z"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InsufficientBalance",
                                                "message": "Insufficient Balance",
                                                "details": "Insufficient Balance"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase429",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankAccountNumberFormat": "IBAN",
                                                            "bankName": "Royal Bank of Scotland",
                                                            "bankAccountOwnershipType": "THIRD_PARTY",
                                                            "routingNumber": "RBOSGB2L",
                                                            "bankNumberFormat": "BASIC",
                                                            "accountCountryCode": "GB",
                                                            "accountCurrency": "GBP",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "destinationAccountHolderAddress": {
                                                        "addressLine1": "4 East Market St",
                                                        "addressLine2": "Unit 101",
                                                        "city": "Edinburgh",
                                                        "state": "Alba",
                                                        "postalCode": "EH88BG",
                                                        "country": "United Kingdom",
                                                        "countryCode": "UK"
                                                    },
                                                    "sourceAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 1000
                                                    },
                                                    "requestTime": "2023-09-26T01:21:53.002Z"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server throttled the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase500",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankAccountNumberFormat": "IBAN",
                                                            "bankName": "Royal Bank of Scotland",
                                                            "bankAccountOwnershipType": "THIRD_PARTY",
                                                            "routingNumber": "RBOSGB2L",
                                                            "bankNumberFormat": "BASIC",
                                                            "accountCountryCode": "GB",
                                                            "accountCurrency": "GBP",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "destinationAccountHolderAddress": {
                                                        "addressLine1": "4 East Market St",
                                                        "addressLine2": "Unit 101",
                                                        "city": "Edinburgh",
                                                        "state": "Alba",
                                                        "postalCode": "EH88BG",
                                                        "country": "United Kingdom",
                                                        "countryCode": "UK"
                                                    },
                                                    "sourceAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 1000
                                                    },
                                                    "requestTime": "2023-09-26T01:21:53.002Z"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase503",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankAccountNumberFormat": "IBAN",
                                                            "bankName": "Royal Bank of Scotland",
                                                            "bankAccountOwnershipType": "THIRD_PARTY",
                                                            "routingNumber": "RBOSGB2L",
                                                            "bankNumberFormat": "BASIC",
                                                            "accountCountryCode": "GB",
                                                            "accountCurrency": "GBP",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "destinationAccountHolderAddress": {
                                                        "addressLine1": "4 East Market St",
                                                        "city": "Edinburgh",
                                                        "addressLine2": "Unit 101",
                                                        "state": "Alba",
                                                        "postalCode": "EH88BG",
                                                        "country": "United Kingdom",
                                                        "countryCode": "UK"
                                                    },
                                                    "sourceAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 1000
                                                    },
                                                    "requestTime": "2023-09-26T01:21:53.002Z"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/finances/transfers/wallet/2024-03-01/transactions/{transactionId}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Find particular Amazon Seller Wallet account transaction by Amazon transaction identifier",
                "description": "Find a transaction by the Amazon transaction identifier.",
                "operationId": "getTransaction",
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "description": "The ID of the Amazon Seller Wallet transaction.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "amzn1.transaction.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transactionId": {
                                                "value": "transactionIdCase200"
                                            }
                                        }
                                    },
                                    "response": {
                                        "transactionId": "amzn.transaction.AKJBNEFNL23R84V",
                                        "transactionType": "DEBIT",
                                        "transactionStatus": "PAYEE_UNDER_REVIEW",
                                        "transactionRequestDate": "2023-09-26T02:32:59.787Z",
                                        "expectedCompletionDate": "2023-09-26T02:32:59.787Z",
                                        "transactionActualCompletionDate": "2023-09-26T02:32:59.787Z",
                                        "lastUpdateDate": "2023-09-26T02:32:59.787Z",
                                        "requesterName": "TppOrgId",
                                        "transactionRequesterSource": "TPP",
                                        "transactionDescription": "Test transaction request",
                                        "transactionSourceAccount": {
                                            "accountId": "sourceAccountIdCase200",
                                            "bankAccountHolderName": "John Doe",
                                            "bankName": "Amazon Seller Wallet",
                                            "bankAccountNumberFormat": "IBAN",
                                            "bankAccountNumberTail": "123",
                                            "bankAccountCurrency": "GBP"
                                        },
                                        "transactionDestinationAccount": {
                                            "bankAccountHolderName": "Dane Shipping",
                                            "bankName": "Royal Bank of Scotland",
                                            "bankAccountNumberFormat": "IBAN",
                                            "bankAccountNumberTail": "819",
                                            "bankAccountCurrency": "GBP",
                                            "bankAccountCountryCode": "EU"
                                        },
                                        "transactionRequestAmount": {
                                            "currencyCode": "EUR",
                                            "currencyAmount": 500
                                        },
                                        "transferRateDetails": {
                                            "baseAmount": {
                                                "currencyCode": "EUR",
                                                "currencyAmount": 500
                                            },
                                            "fxRateDetails": {
                                                "fxRateId": "UNIQUE_FX_RATE_ID_1",
                                                "baseRate": 7.6915,
                                                "effectiveFxRate": 7.6084,
                                                "rateDirection": "BUY"
                                            },
                                            "transferAmount": {
                                                "currencyCode": "CNY",
                                                "currencyAmount": 3804.2
                                            },
                                            "fees": [
                                                {
                                                    "feeId": "Unique_FeeId_001",
                                                    "feeType": "TRANSACTION_FEE",
                                                    "feeRateValue": 0.9,
                                                    "feeAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 4.5
                                                    }
                                                },
                                                {
                                                    "feeId": "Unique_FeeId_002",
                                                    "feeType": "TAX",
                                                    "feeRateValue": 20,
                                                    "feeAmount": {
                                                        "currencyCode": "EUR",
                                                        "currencyAmount": 0.9
                                                    }
                                                }
                                            ]
                                        },
                                        "transactionFinalAmount": {
                                            "currencyCode": "CNY",
                                            "currencyAmount": 3804.2
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transactionId": {
                                                "value": "transactionIdCase400"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing wacCertificate.",
                                                "details": "WAC certificate is missing for the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transactionId": {
                                                "value": "transactionIdCase403"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transactionId": {
                                                "value": "transactionIdCase404"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "BankAccount not found.",
                                                "details": "BankAccount doesn't exists for InvalidAccountId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transactionId": {
                                                "value": "transactionIdCase408"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond in time"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transactionId": {
                                                "value": "transactionIdCase429"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server throttled the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transactionId": {
                                                "value": "transactionIdCase500"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transactionId": {
                                                "value": "transactionIdCase503"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/finances/transfers/wallet/2024-03-01/transferSchedules": {
            "get": {
                "tags": [
                    "Transfer Schedule"
                ],
                "summary": "The API will return all the transfer schedules for a given Amazon Seller Wallet account",
                "description": "Returns all transfer schedules of a given Amazon Seller Wallet bank account with the schedule ID in response if present.",
                "operationId": "listTransferSchedules",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "The ID of the Amazon Seller Wallet account.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token that you use to retrieve the next page of results. The response includes `nextPageToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextPageToken` is null. Note that this operation can return empty pages.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Next Page Token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferScheduleListing"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase200"
                                            }
                                        }
                                    },
                                    "response": {
                                        "nextPageToken": "3493805734095308457308475",
                                        "transferSchedules": [
                                            {
                                                "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                                                "transactionType": "DEBIT",
                                                "transactionSourceAccount": {
                                                    "accountId": "sourceAccountIdCase200",
                                                    "bankAccountHolderName": "John Doe",
                                                    "bankName": "Amazon Seller Wallet",
                                                    "bankAccountNumberFormat": "IBAN",
                                                    "bankAccountNumberTail": "123",
                                                    "bankAccountCurrency": "GBP"
                                                },
                                                "transactionDestinationAccount": {
                                                    "bankAccountHolderName": "Dane Shipping",
                                                    "bankName": "Royal Bank of Scotland",
                                                    "bankAccountNumberFormat": "IBAN",
                                                    "bankAccountNumberTail": "819",
                                                    "bankAccountCurrency": "GBP",
                                                    "bankAccountCountryCode": "EU"
                                                },
                                                "transferScheduleStatus": "ENABLED",
                                                "transferScheduleInformation": {
                                                    "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                    "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                    "scheduleExpression": {
                                                        "scheduleExpressionType": "RECURRING",
                                                        "recurringFrequency": "WEEKLY"
                                                    },
                                                    "scheduleType": "TIME_BASED"
                                                },
                                                "paymentPreference": {
                                                    "paymentPreferencePaymentType": "PERCENTAGE",
                                                    "value": 25.5
                                                },
                                                "transferScheduleFailures": [
                                                    {
                                                        "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                        "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase400"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing wacCertificate.",
                                                "details": "WAC certificate is missing for the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase403"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase404"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "Account not found.",
                                                "details": "Account doesn't exists for InvalidAccountId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase408"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond in time"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase429"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server throttled the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase500"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "accountId": {
                                                "value": "sourceAccountIdCase503"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Transfer Schedule"
                ],
                "summary": "Update a transfer schedule information. Only fields (i.e; transferScheduleInformation, paymentPreference, transferScheduleStatus) in the request body can be updated.",
                "description": "Update transfer schedule information. Returns a transfer belonging to the updated scheduled transfer request.",
                "operationId": "updateTransferSchedule",
                "parameters": [
                    {
                        "name": "destAccountDigitalSignature",
                        "in": "header",
                        "description": "Digital signature for the destination bank account details.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw"
                    },
                    {
                        "name": "amountDigitalSignature",
                        "in": "header",
                        "description": "Digital signature for the source currency transaction amount.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7"
                    }
                ],
                "requestBody": {
                    "description": "The payload of the scheduled transfer request that is to be updated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferSchedule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferSchedule"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "transferScheduleId": "transferScheduleIdCase200",
                                                    "transactionType": "DEBIT",
                                                    "transactionDestinationAccount": {
                                                        "bankAccountHolderName": "Dane Shipping",
                                                        "bankName": "Royal Bank of Scotland",
                                                        "bankAccountNumberFormat": "IBAN",
                                                        "bankAccountNumberTail": "819",
                                                        "bankAccountCurrency": "GBP",
                                                        "bankAccountCountryCode": "EU"
                                                    },
                                                    "transferScheduleStatus": "ENABLED",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleFailures": [
                                                        {
                                                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                                        "transactionType": "DEBIT",
                                        "transactionDestinationAccount": {
                                            "bankAccountHolderName": "Dane Shipping",
                                            "bankName": "Royal Bank of Scotland",
                                            "bankAccountNumberFormat": "IBAN",
                                            "bankAccountNumberTail": "819",
                                            "bankAccountCurrency": "GBP",
                                            "bankAccountCountryCode": "EU"
                                        },
                                        "transferScheduleStatus": "ENABLED",
                                        "transferScheduleInformation": {
                                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                                            "scheduleExpression": {
                                                "scheduleExpressionType": "RECURRING",
                                                "recurringFrequency": "WEEKLY"
                                            },
                                            "scheduleType": "TIME_BASED"
                                        },
                                        "paymentPreference": {
                                            "paymentPreferencePaymentType": "PERCENTAGE",
                                            "value": 25.5
                                        },
                                        "transferScheduleFailures": [
                                            {
                                                "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "transferScheduleId": "transferScheduleIdCase400",
                                                    "transactionType": "DEBIT",
                                                    "transactionDestinationAccount": {
                                                        "bankAccountHolderName": "Dane Shipping",
                                                        "bankName": "Royal Bank of Scotland",
                                                        "bankAccountNumberFormat": "IBAN",
                                                        "bankAccountNumberTail": "819",
                                                        "bankAccountCurrency": "GBP",
                                                        "bankAccountCountryCode": "EU"
                                                    },
                                                    "transferScheduleStatus": "ENABLED",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleFailures": [
                                                        {
                                                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing signature.",
                                                "details": "Missing addressDigitalSignature"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "transferScheduleId": "transferScheduleIdCase403",
                                                    "transactionType": "DEBIT",
                                                    "transactionDestinationAccount": {
                                                        "bankAccountHolderName": "Dane Shipping",
                                                        "bankName": "Royal Bank of Scotland",
                                                        "bankAccountNumberFormat": "IBAN",
                                                        "bankAccountNumberTail": "819",
                                                        "bankAccountCurrency": "GBP",
                                                        "bankAccountCountryCode": "EU"
                                                    },
                                                    "transferScheduleStatus": "ENABLED",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleFailures": [
                                                        {
                                                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid request.",
                                                "details": "Request body provided is invalid."
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "transferScheduleId": "transferScheduleIdCase404",
                                                    "transactionType": "DEBIT",
                                                    "transactionDestinationAccount": {
                                                        "bankAccountHolderName": "Dane Shipping",
                                                        "bankName": "Royal Bank of Scotland",
                                                        "bankAccountNumberFormat": "IBAN",
                                                        "bankAccountNumberTail": "819",
                                                        "bankAccountCurrency": "GBP",
                                                        "bankAccountCountryCode": "EU"
                                                    },
                                                    "transferScheduleStatus": "ENABLED",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleFailures": [
                                                        {
                                                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "Account not found.",
                                                "details": "Account doesn't exists for invalid SourceAccountId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "transferScheduleId": "transferScheduleIdCase408",
                                                    "transactionType": "DEBIT",
                                                    "transactionDestinationAccount": {
                                                        "bankAccountHolderName": "Dane Shipping",
                                                        "bankName": "Royal Bank of Scotland",
                                                        "bankAccountNumberFormat": "IBAN",
                                                        "bankAccountNumberTail": "819",
                                                        "bankAccountCurrency": "GBP",
                                                        "bankAccountCountryCode": "EU"
                                                    },
                                                    "transferScheduleStatus": "ENABLED",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleFailures": [
                                                        {
                                                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond in time"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "transferScheduleId": "transferScheduleIdCase429",
                                                    "transactionType": "DEBIT",
                                                    "transactionDestinationAccount": {
                                                        "bankAccountHolderName": "Dane Shipping",
                                                        "bankName": "Royal Bank of Scotland",
                                                        "bankAccountNumberFormat": "IBAN",
                                                        "bankAccountNumberTail": "819",
                                                        "bankAccountCurrency": "GBP",
                                                        "bankAccountCountryCode": "EU"
                                                    },
                                                    "transferScheduleStatus": "ENABLED",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleFailures": [
                                                        {
                                                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server throttled the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "transferScheduleId": "transferScheduleIdCase500",
                                                    "transactionType": "DEBIT",
                                                    "transactionDestinationAccount": {
                                                        "bankAccountHolderName": "Dane Shipping",
                                                        "bankName": "Royal Bank of Scotland",
                                                        "bankAccountNumberFormat": "IBAN",
                                                        "bankAccountNumberTail": "819",
                                                        "bankAccountCurrency": "GBP",
                                                        "bankAccountCountryCode": "EU"
                                                    },
                                                    "transferScheduleStatus": "ENABLED",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleFailures": [
                                                        {
                                                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "transferScheduleId": "transferScheduleIdCase503",
                                                    "transactionType": "DEBIT",
                                                    "transactionDestinationAccount": {
                                                        "bankAccountHolderName": "Dane Shipping",
                                                        "bankName": "Royal Bank of Scotland",
                                                        "bankAccountNumberFormat": "IBAN",
                                                        "bankAccountNumberTail": "819",
                                                        "bankAccountCurrency": "GBP",
                                                        "bankAccountCountryCode": "EU"
                                                    },
                                                    "transferScheduleStatus": "ENABLED",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleFailures": [
                                                        {
                                                            "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            },
            "post": {
                "tags": [
                    "Transfer Schedule"
                ],
                "summary": "Create a transfer schedule request from Amazon Seller Wallet account to another customer-provided account",
                "description": "Create a transfer schedule request from an Amazon Seller Wallet account to another customer-provided account.",
                "operationId": "createTransferSchedule",
                "parameters": [
                    {
                        "name": "destAccountDigitalSignature",
                        "in": "header",
                        "description": "Digital signature for the destination bank account details.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw"
                    },
                    {
                        "name": "amountDigitalSignature",
                        "in": "header",
                        "description": "Digital signature for the source currency transaction amount.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7"
                    }
                ],
                "requestBody": {
                    "description": "The payload of the request.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferScheduleRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferSchedule"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                                                    "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                                                    "sourceCurrencyCode": "USD",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankNumberFormat": "IBAN",
                                                            "bankAccountOwnershipType": "SELF_ACCOUNT",
                                                            "routingNumber": "HBUKGB4B",
                                                            "accountCountryCode": "EU",
                                                            "accountCurrency": "EUR",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "transactionType": "DEBIT",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleStatus": "ENABLED"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                                        "transactionType": "DEBIT",
                                        "transactionSourceAccount": {
                                            "accountId": "amzn.account.AAJKBWEF193EUBKWDVCS",
                                            "bankAccountHolderName": "John Doe",
                                            "bankName": "Amazon Seller Wallet",
                                            "bankAccountNumberFormat": "IBAN",
                                            "bankAccountNumberTail": "123",
                                            "bankAccountCurrency": "GBP"
                                        },
                                        "transactionDestinationAccount": {
                                            "bankAccountHolderName": "Dane Shipping",
                                            "bankName": "Royal Bank of Scotland",
                                            "bankAccountNumberFormat": "IBAN",
                                            "bankAccountNumberTail": "819",
                                            "bankAccountCurrency": "GBP",
                                            "bankAccountCountryCode": "EU"
                                        },
                                        "transferScheduleStatus": "ENABLED",
                                        "transferScheduleInformation": {
                                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                                            "scheduleExpression": {
                                                "scheduleExpressionType": "RECURRING",
                                                "recurringFrequency": "WEEKLY"
                                            },
                                            "scheduleType": "TIME_BASED"
                                        },
                                        "paymentPreference": {
                                            "paymentPreferencePaymentType": "PERCENTAGE",
                                            "value": 25.5
                                        },
                                        "transferScheduleFailures": [
                                            {
                                                "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase400",
                                                    "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                                                    "sourceCurrencyCode": "USD",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankNumberFormat": "IBAN",
                                                            "bankAccountOwnershipType": "SELF_ACCOUNT",
                                                            "routingNumber": "HBUKGB4B",
                                                            "accountCountryCode": "EU",
                                                            "accountCurrency": "EUR",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "transactionType": "DEBIT",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleStatus": "ENABLED"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing signature.",
                                                "details": "Missing addressDigitalSignature"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase403",
                                                    "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                                                    "sourceCurrencyCode": "USD",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankNumberFormat": "IBAN",
                                                            "bankAccountOwnershipType": "SELF_ACCOUNT",
                                                            "routingNumber": "HBUKGB4B",
                                                            "accountCountryCode": "EU",
                                                            "accountCurrency": "EUR",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "transactionType": "DEBIT",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleStatus": "ENABLED"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase404",
                                                    "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                                                    "sourceCurrencyCode": "USD",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankNumberFormat": "IBAN",
                                                            "bankAccountOwnershipType": "SELF_ACCOUNT",
                                                            "routingNumber": "HBUKGB4B",
                                                            "accountCountryCode": "EU",
                                                            "accountCurrency": "EUR",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "transactionType": "DEBIT",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleStatus": "ENABLED"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "Account not found.",
                                                "details": "Account doesn't exists for invalid SourceAccountId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase408",
                                                    "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                                                    "sourceCurrencyCode": "USD",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankNumberFormat": "IBAN",
                                                            "bankAccountOwnershipType": "SELF_ACCOUNT",
                                                            "routingNumber": "HBUKGB4B",
                                                            "accountCountryCode": "EU",
                                                            "accountCurrency": "EUR",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "transactionType": "DEBIT",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleStatus": "ENABLED"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond in time"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Transfer schedule already exists for same source and destination account combination.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase409",
                                                    "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                                                    "sourceCurrencyCode": "USD",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankNumberFormat": "IBAN",
                                                            "bankAccountOwnershipType": "SELF_ACCOUNT",
                                                            "routingNumber": "HBUKGB4B",
                                                            "accountCountryCode": "EU",
                                                            "accountCurrency": "EUR",
                                                            "bankAccountNumberTail": "919"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926919"
                                                    },
                                                    "transactionType": "DEBIT",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2025-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2026-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleStatus": "ENABLED"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestConflict",
                                                "message": "Request Conflict",
                                                "details": "Transfer schedule already exists for same source and destination account combination."
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase429",
                                                    "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                                                    "sourceCurrencyCode": "USD",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankNumberFormat": "IBAN",
                                                            "bankAccountOwnershipType": "SELF_ACCOUNT",
                                                            "routingNumber": "HBUKGB4B",
                                                            "accountCountryCode": "EU",
                                                            "accountCurrency": "EUR",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "transactionType": "DEBIT",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleStatus": "ENABLED"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server throttled the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase500",
                                                    "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                                                    "sourceCurrencyCode": "USD",
                                                    "transactionType": "DEBIT",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleStatus": "ENABLED"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "body": {
                                                "value": {
                                                    "sourceAccountId": "sourceAccountIdCase503",
                                                    "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                                                    "sourceCurrencyCode": "USD",
                                                    "destinationTransactionInstrument": {
                                                        "bankAccount": {
                                                            "accountHolderName": "John Doe",
                                                            "bankNumberFormat": "IBAN",
                                                            "bankAccountOwnershipType": "SELF_ACCOUNT",
                                                            "routingNumber": "HBUKGB4B",
                                                            "accountCountryCode": "EU",
                                                            "accountCurrency": "EUR",
                                                            "bankAccountNumberTail": "819"
                                                        },
                                                        "bankAccountNumber": "GB29RBOS60161331926819"
                                                    },
                                                    "transactionType": "DEBIT",
                                                    "transferScheduleInformation": {
                                                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                                                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                                                        "scheduleExpression": {
                                                            "scheduleExpressionType": "RECURRING",
                                                            "recurringFrequency": "WEEKLY"
                                                        },
                                                        "scheduleType": "TIME_BASED"
                                                    },
                                                    "paymentPreference": {
                                                        "paymentPreferencePaymentType": "PERCENTAGE",
                                                        "value": 25.5
                                                    },
                                                    "transferScheduleStatus": "ENABLED"
                                                }
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/finances/transfers/wallet/2024-03-01/transferSchedules/{transferScheduleId}": {
            "get": {
                "tags": [
                    "Transfer Schedule"
                ],
                "summary": "Find particular Amazon Seller Wallet account transfer schedule by Amazon transfer schedule identifier",
                "description": "Find a particular Amazon Seller Wallet account transfer schedule.",
                "operationId": "getTransferSchedule",
                "parameters": [
                    {
                        "name": "transferScheduleId",
                        "in": "path",
                        "description": "The schedule ID of the Amazon Seller Wallet transfer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "amzn1.transferschedule.AKNWCDNVP3FNJDCLK876"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransferSchedule"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdcase200"
                                            }
                                        }
                                    },
                                    "response": {
                                        "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                                        "transactionType": "DEBIT",
                                        "transactionSourceAccount": {
                                            "accountId": "sourceAccountIdCase200",
                                            "bankAccountHolderName": "John Doe",
                                            "bankName": "Amazon Seller Wallet",
                                            "bankAccountNumberFormat": "IBAN",
                                            "bankAccountNumberTail": "123",
                                            "bankAccountCurrency": "GBP"
                                        },
                                        "transactionDestinationAccount": {
                                            "bankAccountHolderName": "Dane Shipping",
                                            "bankName": "Royal Bank of Scotland",
                                            "bankAccountNumberFormat": "IBAN",
                                            "bankAccountNumberTail": "819",
                                            "bankAccountCurrency": "GBP",
                                            "bankAccountCountryCode": "EU"
                                        },
                                        "transferScheduleStatus": "ENABLED",
                                        "transferScheduleInformation": {
                                            "scheduleStartDate": "2024-03-01T00:00:00Z",
                                            "scheduleEndDate": "2027-03-01T00:00:00Z",
                                            "scheduleExpression": {
                                                "scheduleExpressionType": "RECURRING",
                                                "recurringFrequency": "WEEKLY"
                                            },
                                            "scheduleType": "TIME_BASED"
                                        },
                                        "paymentPreference": {
                                            "paymentPreferencePaymentType": "PERCENTAGE",
                                            "value": 25.5
                                        },
                                        "transferScheduleFailures": [
                                            {
                                                "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                                                "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase400"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing wacCertificate.",
                                                "details": "WAC certificate is missing for the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase403"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase404"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "Account not found.",
                                                "details": "Account doesn't exists for InvalidAccountId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase408"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond in time"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase429"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server throttled the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase500"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase503"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Transfer Schedule"
                ],
                "summary": "Delete a transaction request that is scheduled from Amazon Seller Wallet account to another customer-provided account",
                "description": "Delete a transaction request that is scheduled from Amazon Seller Wallet account to another customer-provided account.",
                "operationId": "deleteScheduleTransaction",
                "parameters": [
                    {
                        "name": "transferScheduleId",
                        "in": "path",
                        "description": "A unique reference ID for a scheduled transfer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "amzn1.scheduletransfer.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the transfer schedule.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteTransferSchedule"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase200"
                                            }
                                        }
                                    },
                                    "response": {
                                        "code": "Successful",
                                        "message": "Deleted transfer schedule",
                                        "details": "Deleted transfer schedule for ID transferScheduleIdCase200"
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase400"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidInput",
                                                "message": "Invalid or Missing signature.",
                                                "details": "Missing addressDigitalSignature"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase403"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "UnauthorizedRequest",
                                                "message": "Invalid WAC certificate.",
                                                "details": "NCA Status for the certificate is invalid"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase404"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "NotFound",
                                                "message": "Transfer Schedule not found.",
                                                "details": "Transfer schedule id doesn't exists for invalid TransferScheduleId"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "408": {
                        "description": "Request Timed Out.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase408"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestTimedOut",
                                                "message": "Request Timed Out",
                                                "details": "Server did not respond in time"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase429"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "RequestThrottled",
                                                "message": "Request Throttled",
                                                "details": "Server throttled the request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase500"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InternalServerError",
                                                "message": "Internal Server Error",
                                                "details": "Internal Server Error Occurred"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "transferScheduleId": {
                                                "value": "transferScheduleIdCase503"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "ServiceUnavailable",
                                                "message": "Server Unavailable",
                                                "details": "Server is not accepting request"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountHolderAddress": {
                "required": [
                    "addressLine1",
                    "city",
                    "countryCode",
                    "postalCode",
                    "state"
                ],
                "type": "object",
                "properties": {
                    "addressLine1": {
                        "type": "string",
                        "description": "Address Line 1 of the public address.",
                        "example": "678 JFK Street"
                    },
                    "addressLine2": {
                        "type": "string",
                        "description": "Address Line 2 of the public address.",
                        "example": "Unit 415"
                    },
                    "city": {
                        "type": "string",
                        "description": "City name of the public address.",
                        "example": "Seattle"
                    },
                    "state": {
                        "type": "string",
                        "description": "State name of the public address. This will be state or region for CN (China) based addresses.",
                        "example": "WA"
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "Postal code of the public address.",
                        "example": "98109"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country name of the public address.",
                        "example": "United States"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The two digit country code, in ISO 3166 format.",
                        "example": "US"
                    }
                },
                "description": "The Address used to verify the bank account of the payee. This can be a person or business mailing address.",
                "example": {
                    "addressLine1": "678 JFK Street",
                    "city": "Seattle",
                    "state": "WA",
                    "postalCode": "98109",
                    "countryCode": "US"
                }
            },
            "BankAccount": {
                "required": [
                    "accountCountryCode",
                    "accountCurrency",
                    "accountHolderName",
                    "bankAccountNumberFormat",
                    "bankAccountNumberTail",
                    "bankAccountOwnershipType",
                    "bankNumberFormat",
                    "routingNumber"
                ],
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique identifier provided by Amazon to identify the account.",
                        "example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
                    },
                    "accountHolderName": {
                        "type": "string",
                        "description": "The bank account holder's name (expected to be an Amazon customer).",
                        "example": "John Doe"
                    },
                    "bankAccountNumberFormat": {
                        "$ref": "#/components/schemas/BankAccountNumberFormat"
                    },
                    "bankName": {
                        "type": "string",
                        "description": "The name of the bank. This value is Amazon Seller Wallet for Amazon Seller Wallet accounts.",
                        "example": "Bank Of America"
                    },
                    "bankAccountOwnershipType": {
                        "$ref": "#/components/schemas/BankAccountOwnershipType"
                    },
                    "routingNumber": {
                        "type": "string",
                        "description": "Routing number for automated clearing house transfers. This value is nine consecutive zeros for Amazon Seller Wallet accounts.",
                        "example": "026009593"
                    },
                    "bankNumberFormat": {
                        "$ref": "#/components/schemas/BankNumberFormat"
                    },
                    "accountCountryCode": {
                        "type": "string",
                        "description": "The two-digit country code in ISO 3166 format.",
                        "example": "US"
                    },
                    "accountCurrency": {
                        "type": "string",
                        "description": "Bank account currency code in ISO 4217 format.",
                        "example": "USD"
                    },
                    "bankAccountNumberTail": {
                        "type": "string",
                        "description": "The last 3 digit of the bank account number. This value is three consecutive zeros for Amazon Seller Wallet accounts.",
                        "example": "123"
                    },
                    "bankAccountHolderStatus": {
                        "$ref": "#/components/schemas/BankAccountHolderStatus"
                    }
                },
                "description": "Details of an Amazon Seller Wallet bank account. This account is used to hold the money that a Seller Wallet customer earns by selling items."
            },
            "BankAccountListing": {
                "required": [
                    "accounts"
                ],
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "description": "A list of bank accounts.",
                        "items": {
                            "$ref": "#/components/schemas/BankAccount"
                        }
                    }
                },
                "description": "A list of bank accounts."
            },
            "Balance": {
                "required": [
                    "accountId",
                    "balanceAmount",
                    "balanceCurrency",
                    "lastUpdateDate"
                ],
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique identifier provided by Amazon to identify the account.",
                        "example": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ"
                    },
                    "balanceType": {
                        "$ref": "#/components/schemas/BalanceType"
                    },
                    "balanceAmount": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "balanceCurrency": {
                        "type": "string",
                        "description": "The Amazon Seller Wallet bank account currency code in ISO 4217 format.",
                        "example": "USD"
                    },
                    "lastUpdateDate": {
                        "type": "string",
                        "description": "The date of the most recent account balance update.",
                        "format": "date-time"
                    }
                },
                "description": "The balance amount in the Amazon Seller Wallet bank account.",
                "example": {
                    "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                    "balanceType": "AVAILABLE",
                    "balanceAmount": 123.45,
                    "balanceCurrency": "USD",
                    "lastUpdateDate": "2024-03-01T10:30:00Z"
                }
            },
            "BalanceListing": {
                "type": "object",
                "properties": {
                    "balances": {
                        "type": "array",
                        "description": "A list of balances in the seller account.",
                        "items": {
                            "$ref": "#/components/schemas/Balance"
                        }
                    }
                },
                "description": "A list of balances in the seller account.",
                "example": {
                    "balances": [
                        {
                            "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                            "balanceType": "AVAILABLE",
                            "balanceAmount": 123.45,
                            "balanceCurrency": "USD",
                            "lastUpdateDate": "2024-03-01T10:30:00Z"
                        },
                        {
                            "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                            "balanceType": "LOCKED_IN",
                            "balanceAmount": 500,
                            "balanceCurrency": "USD",
                            "lastUpdateDate": "2024-03-01T10:30:00Z"
                        },
                        {
                            "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
                            "balanceType": "TOTAL",
                            "balanceAmount": 623.45,
                            "balanceCurrency": "USD",
                            "lastUpdateDate": "2024-03-01T10:30:00Z"
                        }
                    ]
                }
            },
            "BalanceType": {
                "type": "string",
                "description": "The type of bank account balance.",
                "enum": [
                    "AVAILABLE",
                    "LOCKED_IN",
                    "LOCKED_OUT",
                    "TOTAL"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "AVAILABLE",
                        "description": "The available balance that is accessible to the seller."
                    },
                    {
                        "value": "LOCKED_IN",
                        "description": "The incoming balance in the seller's account."
                    },
                    {
                        "value": "LOCKED_OUT",
                        "description": "The outgoing balance from seller's account"
                    },
                    {
                        "value": "TOTAL",
                        "description": "The total balance in the seller's account."
                    }
                ]
            },
            "BankAccountNumberFormat": {
                "type": "string",
                "description": "The bank account's format type.",
                "enum": [
                    "IBAN",
                    "BBAN"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "IBAN",
                        "description": "International bank account number."
                    },
                    {
                        "value": "BBAN",
                        "description": "Basic bank account number for domestic bank accounts."
                    }
                ]
            },
            "BankAccountHolderStatus": {
                "type": "string",
                "description": "The status of the Amazon Seller Wallet account holder.",
                "enum": [
                    "ACTIVE",
                    "INACTIVE",
                    "UNDER_REVIEW",
                    "VERIFICATION_FAILED"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "ACTIVE",
                        "description": "The account holder is Active."
                    },
                    {
                        "value": "INACTIVE",
                        "description": "The account holder is inactive and cannot make transactions."
                    },
                    {
                        "value": "UNDER_REVIEW",
                        "description": "The account holder is currently under review."
                    },
                    {
                        "value": "VERIFICATION_FAILED",
                        "description": "The account holder KYC (Know Your Customer) verification has failed."
                    }
                ]
            },
            "BankAccountOwnershipType": {
                "type": "string",
                "description": "The destination bank account's ownership type.",
                "enum": [
                    "THIRD_PARTY",
                    "SELF",
                    "GOVERNMENT"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "THIRD_PARTY",
                        "description": "The account is not officially owned by the Payment Service User who is viewing the account and initiating the transaction."
                    },
                    {
                        "value": "SELF",
                        "description": "The account is officially owned by the Payment Service User who is viewing the account and initiating the transaction."
                    },
                    {
                        "value": "GOVERNMENT",
                        "description": "The account is officially owned by a government entity and is used for service fees / tax collection."
                    }
                ]
            },
            "BankNumberFormat": {
                "type": "string",
                "description": "The format of the bank number. Also known as the routing number type.",
                "enum": [
                    "BIC",
                    "BASIC"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "BIC",
                        "description": "Business Identifier Code. In ISO_9362 format."
                    },
                    {
                        "value": "BASIC",
                        "description": "The bank number has a special format specific to the country code provided, such as ABA routing number."
                    }
                ]
            },
            "BigDecimal": {
                "type": "number",
                "description": "A decimal number, such as an amount or FX rate."
            },
            "Currency": {
                "type": "object",
                "properties": {
                    "currencyCode": {
                        "type": "string",
                        "description": "The three-digit currency code in ISO 4217 format."
                    },
                    "currencyAmount": {
                        "$ref": "#/components/schemas/BigDecimal"
                    }
                },
                "description": "A currency type and amount."
            },
            "DeleteTransferSchedule": {
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "A success code that specifies that the delete operation was successful. For example, HTTP 200."
                    },
                    "message": {
                        "type": "string",
                        "description": "A message that describes the success condition of the delete schedule transaction."
                    },
                    "details": {
                        "type": "string",
                        "description": "Additional details that can help the caller understand the operation execution."
                    }
                },
                "description": "The response returned when the schedule transfer's delete request is successful."
            },
            "Error": {
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "An error code that identifies the type of error that occurred."
                    },
                    "message": {
                        "type": "string",
                        "description": "A message that describes the error condition."
                    },
                    "details": {
                        "type": "string",
                        "description": "Additional details that can help the caller understand or fix the issue."
                    }
                },
                "description": "Error response returned when the request is unsuccessful."
            },
            "ErrorList": {
                "required": [
                    "errors"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "description": "List of errors",
                        "items": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                },
                "description": "A list of error responses returned when a request is unsuccessful."
            },
            "FxRateDetails": {
                "required": [
                    "baseRate",
                    "effectiveFxRate",
                    "fxRateId",
                    "rateDirection"
                ],
                "type": "object",
                "properties": {
                    "fxRateId": {
                        "type": "string",
                        "description": "The unique identifier assigned to the fees / foreign exchange rate of a transaction."
                    },
                    "baseRate": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "effectiveFxRate": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "rateDirection": {
                        "$ref": "#/components/schemas/RateDirection"
                    }
                },
                "description": "Foreign exchange rate details.",
                "example": {
                    "fxRateId": "UNIQUE_FX_RATE_ID_1",
                    "baseRate": 7.2,
                    "effectiveFxRate": 7.25,
                    "rateDirection": "BUY"
                }
            },
            "Fee": {
                "required": [
                    "feeAmount",
                    "feeId",
                    "feeRateValue",
                    "feeType"
                ],
                "type": "object",
                "properties": {
                    "feeId": {
                        "type": "string",
                        "description": "The unique identifier assigned to the fee."
                    },
                    "feeType": {
                        "$ref": "#/components/schemas/FeeType"
                    },
                    "feeRateValue": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "feeAmount": {
                        "$ref": "#/components/schemas/Currency"
                    }
                },
                "description": "Details of the fee."
            },
            "FeeType": {
                "type": "string",
                "description": "The type of fee on the transaction.",
                "enum": [
                    "MISCELLANEOUS_FEE",
                    "TAX",
                    "TRANSACTION_FEE"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "MISCELLANEOUS_FEE",
                        "description": "Any other service charges or additional fee applied by a transaction executor service."
                    },
                    {
                        "value": "TAX",
                        "description": "Taxes on the transaction."
                    },
                    {
                        "value": "TRANSACTION_FEE",
                        "description": "A per-transaction fee that can be applied by a transaction executor service. This can be both international and domestic fees"
                    }
                ]
            },
            "RateDirection": {
                "type": "string",
                "description": "Whether the customer is buying or selling the source currency.",
                "enum": [
                    "BUY",
                    "SELL"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "BUY",
                        "description": "The customer is buying the source currency."
                    },
                    {
                        "value": "SELL",
                        "description": "The customer is selling the source currency."
                    }
                ]
            },
            "PaymentPreference": {
                "required": [
                    "paymentPreferencePaymentType",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "paymentPreferencePaymentType": {
                        "$ref": "#/components/schemas/PaymentPreferencePaymentType"
                    },
                    "value": {
                        "$ref": "#/components/schemas/BigDecimal"
                    }
                },
                "description": "The type of payment preference in which the transfer is being scheduled."
            },
            "PaymentPreferencePaymentType": {
                "type": "string",
                "description": "The type of payment preference.",
                "enum": [
                    "PERCENTAGE",
                    "AMOUNT"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "PERCENTAGE",
                        "description": "The scheduled transfer is a percentage of the account total."
                    },
                    {
                        "value": "AMOUNT",
                        "description": "The scheduled transfer is a specific amount."
                    }
                ]
            },
            "RecurringFrequency": {
                "type": "string",
                "description": "The frequency at which the transaction is repeated.",
                "enum": [
                    "BIWEEKLY",
                    "DAILY",
                    "MONTHLY",
                    "WEEKLY"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "BIWEEKLY",
                        "description": "The transfer will repeat every two weeks."
                    },
                    {
                        "value": "DAILY",
                        "description": "The transfer will repeat every day."
                    },
                    {
                        "value": "MONTHLY",
                        "description": "The transfer will repeat every month."
                    },
                    {
                        "value": "WEEKLY",
                        "description": "The transfer will repeat every week."
                    }
                ]
            },
            "TransferScheduleInformation": {
                "type": "object",
                "properties": {
                    "scheduleStartDate": {
                        "type": "string",
                        "description": "The start date of the scheduled transfer.",
                        "format": "date-time",
                        "example": "2024-03-01T00:00:00Z"
                    },
                    "scheduleEndDate": {
                        "type": "string",
                        "description": "The end date of the scheduled transfer.",
                        "format": "date-time",
                        "example": "2027-03-01T00:00:00Z"
                    },
                    "scheduleExpression": {
                        "$ref": "#/components/schemas/ScheduleExpression"
                    },
                    "scheduleType": {
                        "$ref": "#/components/schemas/ScheduleTransferType"
                    }
                },
                "description": "Mandatory information for initiating a schedule transfer.",
                "example": {
                    "scheduleStartDate": "2024-03-01T00:00:00Z",
                    "scheduleEndDate": "2027-03-01T00:00:00Z",
                    "scheduleExpression": {
                        "scheduleExpressionType": "RECURRING",
                        "recurringFrequency": "WEEKLY"
                    },
                    "scheduleType": "TIME_BASED"
                }
            },
            "ScheduleExpression": {
                "required": [
                    "scheduleExpressionType"
                ],
                "type": "object",
                "properties": {
                    "scheduleExpressionType": {
                        "$ref": "#/components/schemas/ScheduleExpressionType"
                    },
                    "recurringFrequency": {
                        "$ref": "#/components/schemas/RecurringFrequency"
                    }
                },
                "description": "The configuration of the schedule."
            },
            "ScheduleExpressionType": {
                "type": "string",
                "description": "The type of scheduled transfer expression.",
                "enum": [
                    "RECURRING",
                    "ONE_TIME"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "RECURRING",
                        "description": "The scheduled transfer is a recurring event."
                    },
                    {
                        "value": "ONE_TIME",
                        "description": "The scheduled transfer is a one-time event."
                    }
                ]
            },
            "ScheduleTransferType": {
                "type": "string",
                "description": "The type of schedule the transfer is on. Schedules based on time patterns use EventBridge.",
                "enum": [
                    "TIME_BASED"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "TIME_BASED",
                        "description": "The schedule is based on time patterns using EventBridge. Supports recurring patterns (daily, weekly, biweekly, monthly) and one-time events. "
                    }
                ]
            },
            "TransactionInitiationRequest": {
                "required": [
                    "description",
                    "destinationTransactionInstrument",
                    "requestTime",
                    "sourceAccountId",
                    "sourceAmount"
                ],
                "type": "object",
                "properties": {
                    "sourceAccountId": {
                        "type": "string",
                        "description": "The unique identifier of the source Amazon Seller Wallet bank account from which the money is debited.",
                        "example": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI"
                    },
                    "destinationAccountId": {
                        "type": "string",
                        "description": "The unique identifier of the destination bank account where the money is deposited.",
                        "example": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the transaction.",
                        "example": "Payment to the delivery partner"
                    },
                    "destinationTransactionInstrument": {
                        "$ref": "#/components/schemas/TransactionInstrumentDetails"
                    },
                    "destinationAccountHolderAddress": {
                        "$ref": "#/components/schemas/AccountHolderAddress"
                    },
                    "sourceAmount": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "transferRateDetails": {
                        "$ref": "#/components/schemas/TransferRatePreview"
                    },
                    "requestTime": {
                        "type": "string",
                        "description": "The time at which the transaction was initiated in [ISO 8601 date time format](https://developer-docs.amazon.com/sp-api/docs/iso-8601).",
                        "format": "date-time",
                        "example": "2024-03-26T02:32:59.787Z"
                    }
                },
                "description": "Request body to initiate a transaction from a Seller Wallet bank account to another customer-defined bank account.",
                "example": {
                    "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                    "description": "Payment to the delivery partner",
                    "sourceAmount": {
                        "amount": 100,
                        "currency": "USD"
                    },
                    "destinationTransactionInstrument": {
                        "bankAccount": {
                            "accountHolderName": "John Doe",
                            "bankAccountNumberFormat": "BBAN",
                            "bankAccountOwnershipType": "SELF",
                            "routingNumber": "HBUKGB4B",
                            "bankNumberFormat": "BASIC",
                            "accountCountryCode": "CN",
                            "accountCurrency": "CNY",
                            "bankAccountNumberTail": "819"
                        },
                        "bankAccountNumber": "GB29RBOS60161331926819"
                    },
                    "destinationAccountHolderAddress": {
                        "addressLine1": "333 Boren Ave N",
                        "city": "Seattle",
                        "state": "WA",
                        "postalCode": "98109",
                        "countryCode": "US"
                    },
                    "transferRateDetails": {
                        "baseAmount": {
                            "currencyCode": "EUR",
                            "currencyAmount": 500
                        },
                        "fxRateDetails": {
                            "fxRateId": "UNIQUE_FX_RATE_ID_1",
                            "baseRate": 7.6915,
                            "effectiveFxRate": 7.6084,
                            "rateDirection": "BUY"
                        },
                        "transferAmount": {
                            "currencyCode": "CNY",
                            "currencyAmount": 3804.2
                        },
                        "fees": [
                            {
                                "feeId": "Unique_FeeId_001",
                                "feeType": "TRANSACTION_FEE",
                                "feeRateValue": 0.9,
                                "feeAmount": {
                                    "currencyCode": "EUR",
                                    "currencyAmount": 4.5
                                }
                            },
                            {
                                "feeId": "Unique_FeeId_002",
                                "feeType": "TAX",
                                "feeRateValue": 20,
                                "feeAmount": {
                                    "currencyCode": "EUR",
                                    "currencyAmount": 0.9
                                }
                            }
                        ]
                    },
                    "requestTime": "2024-03-26T02:32:59.787Z"
                }
            },
            "TransactionInstrumentDetails": {
                "required": [
                    "bankAccount",
                    "bankAccountNumber"
                ],
                "type": "object",
                "properties": {
                    "bankAccount": {
                        "$ref": "#/components/schemas/BankAccount"
                    },
                    "bankAccountNumber": {
                        "type": "string",
                        "description": "The bank account number of the destination payment method.\n\n**Note:** This field is encrypted before Amazon receives it, so should not be used to generate `destAccountDigitalSignature`, and should not be included in the request signature.",
                        "example": "GB29RBOS60161331926819"
                    }
                },
                "description": "Details of the destination bank account in the transaction request.",
                "example": {
                    "bankAccount": {
                        "accountHolderName": "John Doe",
                        "bankAccountNumberFormat": "IBAN",
                        "bankAccountOwnershipType": "SELF",
                        "routingNumber": "HBUKGB4B",
                        "bankNumberFormat": "BASIC",
                        "accountCountryCode": "EU",
                        "accountCurrency": "EUR",
                        "bankAccountNumberTail": "819"
                    },
                    "bankAccountNumber": "GB29RBOS60161331926819"
                }
            },
            "Transaction": {
                "required": [
                    "lastUpdateDate",
                    "transactionDescription",
                    "transactionDestinationAccount",
                    "transactionId",
                    "transactionRequestAmount",
                    "transactionRequestDate",
                    "transactionRequesterSource",
                    "transactionSourceAccount",
                    "transactionStatus",
                    "transactionType",
                    "transferRateDetails"
                ],
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "The unique identifier provided by Amazon to the transaction."
                    },
                    "transactionType": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "transactionStatus": {
                        "$ref": "#/components/schemas/TransactionStatus"
                    },
                    "transactionRequestDate": {
                        "type": "string",
                        "description": "The date on which the transaction was initiated.",
                        "format": "date-time"
                    },
                    "expectedCompletionDate": {
                        "type": "string",
                        "description": "The expected completion date of the transaction.",
                        "format": "date-time",
                        "example": "2023-09-26T02:32:59.787Z"
                    },
                    "transactionActualCompletionDate": {
                        "type": "string",
                        "description": "The transaction's completion date.",
                        "format": "date-time"
                    },
                    "lastUpdateDate": {
                        "type": "string",
                        "description": "The date of the most recent account balance update.",
                        "format": "date-time"
                    },
                    "requesterName": {
                        "type": "string",
                        "description": "The Amazon Seller Wallet customer who requested the transaction.",
                        "example": "TPPOrgId"
                    },
                    "transactionRequesterSource": {
                        "type": "string",
                        "description": "The transaction initiation source. This value could be the Amazon portal or PISP name that the customer used to start the transaction."
                    },
                    "transactionDescription": {
                        "type": "string",
                        "description": "The description provided by the requester in the transaction request at time of transaction initiation."
                    },
                    "transactionSourceAccount": {
                        "$ref": "#/components/schemas/TransactionAccount"
                    },
                    "transactionDestinationAccount": {
                        "$ref": "#/components/schemas/TransactionAccount"
                    },
                    "transactionRequestAmount": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "transferRateDetails": {
                        "$ref": "#/components/schemas/TransferRatePreview"
                    },
                    "transactionFinalAmount": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "transactionFailureReason": {
                        "type": "string",
                        "description": "The reason the transaction failed, if applicable.",
                        "example": "Insufficient Balance"
                    }
                },
                "description": "The current transaction status and historical details related to it."
            },
            "TransactionAccount": {
                "required": [
                    "bankAccountCurrency",
                    "bankAccountHolderName",
                    "bankAccountNumberFormat",
                    "bankName"
                ],
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The unique identifier provided by Amazon to identify the account."
                    },
                    "bankAccountHolderName": {
                        "type": "string",
                        "description": "The account holder's name."
                    },
                    "bankName": {
                        "type": "string",
                        "description": "The name of the bank."
                    },
                    "bankAccountNumberFormat": {
                        "$ref": "#/components/schemas/BankAccountNumberFormat"
                    },
                    "bankAccountNumberTail": {
                        "type": "string",
                        "description": "The last three digits of the bank account number."
                    },
                    "bankAccountCountryCode": {
                        "type": "string",
                        "description": "The two-digit country code, in ISO 3166 format. This field is optional for `transactionSourceAccount`, but is mandatory for `transactionDestinationAccount`."
                    },
                    "bankAccountCurrency": {
                        "type": "string",
                        "description": "The currency code in ISO 4217 format."
                    }
                },
                "description": "Details of the bank account involved in transaction."
            },
            "TransactionListing": {
                "required": [
                    "transactions"
                ],
                "type": "object",
                "properties": {
                    "nextPageToken": {
                        "type": "string",
                        "description": "A token that you use to retrieve the next page of results. The response includes `nextPageToken` when the number of results exceeds 100. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextPageToken` is null. Note that this operation can return empty pages.",
                        "example": "3493805734095308457308475"
                    },
                    "transactions": {
                        "type": "array",
                        "description": "A list of transactions.",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        }
                    }
                },
                "description": "A list of transactions."
            },
            "TransactionStatus": {
                "type": "string",
                "description": "The current status of the transaction.",
                "enum": [
                    "FAILED",
                    "FAILED_CREDITS_APPLIED",
                    "INITIATED",
                    "IN_PROGRESS",
                    "PAYEE_UNDER_REVIEW",
                    "SUCCESSFUL"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "FAILED",
                        "description": "The transaction failed before completion."
                    },
                    {
                        "value": "FAILED_CREDITS_APPLIED",
                        "description": "The transaction failed after debit and credit had been applied back to the balance."
                    },
                    {
                        "value": "INITIATED",
                        "description": "The transaction was requested but not started yet."
                    },
                    {
                        "value": "IN_PROGRESS",
                        "description": "The transaction is in progress."
                    },
                    {
                        "value": "PAYEE_UNDER_REVIEW",
                        "description": "The destination account holder (beneficiary) is under review."
                    },
                    {
                        "value": "SUCCESSFUL",
                        "description": "The transaction is successfully processed."
                    }
                ]
            },
            "TransactionType": {
                "type": "string",
                "description": "The type of transaction.",
                "enum": [
                    "CREDIT",
                    "DEBIT"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "CREDIT",
                        "description": "Money is deposited into Amazon Seller Wallet account."
                    },
                    {
                        "value": "DEBIT",
                        "description": "Money is taken out of the Amazon Seller Wallet account."
                    }
                ]
            },
            "TransferRatePreview": {
                "required": [
                    "baseAmount",
                    "fees",
                    "fxRateDetails",
                    "transferAmount"
                ],
                "type": "object",
                "properties": {
                    "baseAmount": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "fxRateDetails": {
                        "$ref": "#/components/schemas/FxRateDetails"
                    },
                    "transferAmount": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "fees": {
                        "type": "array",
                        "description": "A list of fees.",
                        "items": {
                            "$ref": "#/components/schemas/Fee"
                        }
                    }
                },
                "description": "The fees and foreign exchange rates applied to the transaction.\n\nIf the fees are in terms of the `baseAmount` (source account) currency, then the effective rate is equal to **1 - (fees * `baseRate` / `baseAmount`)**.\n\nIf the fees are in terms of the `transferAmount` (destination account) currency, then the effective rate is equal to **`baseRate` - (fees / `baseAmount`)**.\n\nIn the preceding expressions, **fees** is equal to the sum of all `feeAmount.currencyAmount` values in the `fees` array."
            },
            "TransferSchedule": {
                "required": [
                    "transactionDestinationAccount",
                    "transactionType",
                    "transferScheduleFailures",
                    "transferScheduleId",
                    "transferScheduleInformation",
                    "transferScheduleStatus"
                ],
                "type": "object",
                "properties": {
                    "transferScheduleId": {
                        "type": "string",
                        "description": "The unique identifier provided by Amazon to the scheduled transfer."
                    },
                    "transactionType": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "transactionSourceAccount": {
                        "$ref": "#/components/schemas/TransactionAccount"
                    },
                    "transactionDestinationAccount": {
                        "$ref": "#/components/schemas/TransactionAccount"
                    },
                    "transferScheduleStatus": {
                        "$ref": "#/components/schemas/TransferScheduleStatus"
                    },
                    "transferScheduleInformation": {
                        "$ref": "#/components/schemas/TransferScheduleInformation"
                    },
                    "paymentPreference": {
                        "$ref": "#/components/schemas/PaymentPreference"
                    },
                    "transferScheduleFailures": {
                        "type": "array",
                        "description": "A list of transfer schedule failures.",
                        "items": {
                            "$ref": "#/components/schemas/TransferScheduleFailures"
                        }
                    }
                },
                "description": "Transfer schedule details and historical details related to it.",
                "example": {
                    "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                    "transactionType": "DEBIT",
                    "transactionSourceAccount": {
                        "accountId": "sourceAccountIdCase200",
                        "bankAccountHolderName": "John Doe",
                        "bankName": "Amazon Seller Wallet",
                        "bankAccountNumberFormat": "IBAN",
                        "bankAccountNumberTail": "123",
                        "bankAccountCurrency": "GBP"
                    },
                    "transactionDestinationAccount": {
                        "bankAccountHolderName": "Dane Shipping",
                        "bankName": "Royal Bank of Scotland",
                        "bankAccountNumberFormat": "IBAN",
                        "bankAccountNumberTail": "819",
                        "bankAccountCurrency": "GBP",
                        "bankAccountCountryCode": "EU"
                    },
                    "transferScheduleStatus": "ENABLED",
                    "transferScheduleInformation": {
                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                        "scheduleExpression": {
                            "scheduleExpressionType": "RECURRING",
                            "recurringFrequency": "WEEKLY"
                        },
                        "scheduleType": "TIME_BASED"
                    },
                    "paymentPreference": {
                        "paymentPreferencePaymentType": "PERCENTAGE",
                        "value": 25.5
                    },
                    "transferScheduleFailures": [
                        {
                            "transferScheduleFailureDate": "2024-04-01T10:30:00Z",
                            "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                        }
                    ]
                }
            },
            "TransferScheduleFailures": {
                "required": [
                    "transferScheduleFailureDate",
                    "transferScheduleFailureReason"
                ],
                "type": "object",
                "properties": {
                    "transferScheduleFailureDate": {
                        "type": "string",
                        "description": "The transfer schedule failure date.",
                        "format": "date-time"
                    },
                    "transferScheduleFailureReason": {
                        "type": "string",
                        "description": "The reason listed for the failure of the transfer schedule.",
                        "example": "INSUFFICIENT_BALANCE"
                    }
                },
                "description": "The time of and reason for the transfer schedule failure.",
                "example": {
                    "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
                    "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
                }
            },
            "TransferScheduleListing": {
                "required": [
                    "transferSchedules"
                ],
                "type": "object",
                "properties": {
                    "nextPageToken": {
                        "type": "string",
                        "description": "A token that you use to retrieve the next page of results. The response includes `nextPageToken` when the number of results exceeds 100. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextPageToken` is null. Note that this operation can return empty pages.",
                        "example": "3493805734095308457308475"
                    },
                    "transferSchedules": {
                        "type": "array",
                        "description": "A list of transfer schedules.",
                        "items": {
                            "$ref": "#/components/schemas/TransferSchedule"
                        }
                    }
                },
                "description": "A list of transfer schedules."
            },
            "TransferScheduleRequest": {
                "required": [
                    "destinationAccountId",
                    "destinationTransactionInstrument",
                    "paymentPreference",
                    "sourceAccountId",
                    "sourceCurrencyCode",
                    "transactionType",
                    "transferScheduleInformation"
                ],
                "type": "object",
                "properties": {
                    "sourceAccountId": {
                        "type": "string",
                        "description": "The unique identifier of the source Amazon Seller Wallet bank account from which money is debited.",
                        "example": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI"
                    },
                    "sourceCurrencyCode": {
                        "type": "string",
                        "description": "The three-letter currency code of the source payment method country, in ISO 4217 format.",
                        "example": "GBP"
                    },
                    "destinationAccountId": {
                        "type": "string",
                        "description": "The unique identifier of the destination bank account where the money is deposited.",
                        "example": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN"
                    },
                    "destinationTransactionInstrument": {
                        "$ref": "#/components/schemas/TransactionInstrumentDetails"
                    },
                    "transactionType": {
                        "$ref": "#/components/schemas/TransactionType"
                    },
                    "transferScheduleInformation": {
                        "$ref": "#/components/schemas/TransferScheduleInformation"
                    },
                    "paymentPreference": {
                        "$ref": "#/components/schemas/PaymentPreference"
                    },
                    "transferScheduleStatus": {
                        "$ref": "#/components/schemas/TransferScheduleStatus"
                    }
                },
                "description": "Request body to initiate a scheduled transfer from a Seller Wallet bank account to another customer-defined bank account.",
                "example": {
                    "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
                    "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
                    "sourceCurrencyCode": "USD",
                    "destinationTransactionInstrument": {
                        "bankAccount": {
                            "accountHolderName": "John Doe",
                            "bankAccountNumberFormat": "BBAN",
                            "bankAccountOwnershipType": "SELF",
                            "routingNumber": "HBUKGB4B",
                            "bankNumberFormat": "BASIC",
                            "accountCountryCode": "CN",
                            "accountCurrency": "CNY",
                            "bankAccountNumberTail": "819"
                        },
                        "bankAccountNumber": "GB29RBOS60161331926819"
                    },
                    "transactionType": "DEBIT",
                    "transferScheduleInformation": {
                        "scheduleStartDate": "2024-03-01T00:00:00Z",
                        "scheduleEndDate": "2027-03-01T00:00:00Z",
                        "scheduleExpression": {
                            "scheduleExpressionType": "RECURRING",
                            "recurringFrequency": "WEEKLY"
                        },
                        "scheduleType": "TIME_BASED"
                    },
                    "paymentPreference": {
                        "paymentPreferencePaymentType": "PERCENTAGE",
                        "value": 25.5
                    },
                    "transferScheduleStatus": "ENABLED"
                }
            },
            "TransferScheduleStatus": {
                "type": "string",
                "description": "The schedule status of the transfer.",
                "enum": [
                    "ENABLED",
                    "DISABLED",
                    "EXPIRED",
                    "DELETED"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "ENABLED",
                        "description": "The transfer schedule is enabled."
                    },
                    {
                        "value": "DISABLED",
                        "description": "The transfer schedule is disabled."
                    },
                    {
                        "value": "EXPIRED",
                        "description": "The transfer has expired and is no longer scheduled."
                    },
                    {
                        "value": "DELETED",
                        "description": "The transfer was scheduled but has been deleted."
                    }
                ]
            }
        }
    },
    "x-original-swagger-version": "2.0"
}